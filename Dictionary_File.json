{
    "automaton": "self-operating machine, or a machine or control mechanism designed to automatically follow a predetermined sequence of operations, or respond to predetermined instructions", 
    "constraint list": "is a list of expressions (with boolean type) which are assumed to hold", 
    "container": "Consists of a runtime environment. It has the package which includes the application, dependencies, libraries, and binaries. This way a program can be tested/run on another environment/computer", 
    "decidability": "Whether or not you are able to get a consistent yes/no answer based on input", 
    "decidable language": "A language for which membership can be decided by an algorithm that halts on all inputs in a finite number of steps (recognized by a Turing machine). There exists an algorithm that will make the program reject if input is not valid language.", 
    "deterministic": "For the same input, will always result in same output", 
    "dynamic programming": "Find all possible solutions and then pick the best method (usually with recursion formulas/iteration)", 
    "expressiveness": "breadth of ideas that can be represented and communicated in that language.", 
    "grammar": "the description of a language as a state machine or in prose", 
    "greedy method": "Use a predetermined process/path", 
    "halting problem": "Whether or not a program (M) will halt given an input (IM). Turing proved that it is impossible to develop an algorithm that can effectively determine if a program will halt given a certain input", 
    "memorization": "Top-down approach (e.g. starting from the bigger numbers to the lower one)", 
    "non-terminal": "Things that use terminals like sentences and paragraphs", 
    "nondeterministic": "For the same input can exhibit different behaviors on different runs", 
    "optimization": "Finding minimum/maximum way to do something", 
    "parser": "Code responsible for handling user input", 
    "principle of optimality": "using seek/solve solutions", 
    "recognizable (recursively enumerable)": "there is a Turing Machine which will halt and accept only the strings in that language and for strings not in the language, the TM either rejects, or does not halt at all.", 
    "tabulation": "Bottom-up approach (start from the smaller numbers)", 
    "terminals": "Smallest block in grammar (single words)", 
    "turing machine": "A tape of boxes with 0, 1, or empty spaces, the program will go to each of boxes and will read the instructions from these boxes and take the subsequent actions (transition to another box/state). The final state is when the machine halts", 
    "undecidable language": "Membership cannot be decided by an algorithm, can\u2019t be recognized by a Turing machine that halts for all inputs. If it doesn\u2019t belong, the machine will either reject"
}